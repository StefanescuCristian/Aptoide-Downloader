#!/bin/bash

echo -e "\e[1m\e[93mAptoide Downloader\e[0m
\e[1mCopyright (C) 2012-2015 Cristian Stefanescu\e[0m
This program comes with ABSOLUTELY NO WARRANTY;
This is free software, and you are welcome to redistribute it
under certain conditions;  for details see LICENCE
or visit http://www.gnu.org/licenses/

\e[1mContributors:
	https://github.com/bastei
	https://github.com/mfonville\e[0m"

agent="Aptoide"

### Main function. You can start the download using the link as a argument, ###
### or read the link from stdin after running the script. 					###
function main {
	### We create a folder in which Aptoide will download the apk 	###
	### and we save the name in a variable 							###
	if [ -w "/storage/sdcard0" ]; then
		aptoide_home_dir="/storage/sdcard0/Download/aptoide"
	elif [ -w "$(xdg-user-dir DOWNLOAD)" ]; then
		aptoide_home_dir="$(xdg-user-dir DOWNLOAD)/aptoide"
	else
		aptoide_home_dir="$HOME/aptoide"
	fi

	mkdir -p $aptoide_home_dir


	if [ "$#" -eq 1 ]; then
		atribut $1
	else
		echo "Insert link or package id:"
		read link
		atribut $link
	fi
}

function atribut {
	if echo $1 | grep -Eq '^(([A-Za-z]{1}[A-Za-z\d_]*\.)+[A-Za-z][A-Za-z\d_]*)$'; then
		### We got a package id as parameter
		### Load JSON from search API
		curl -k -o $aptoide_home_dir/.temp -H "User-Agent: $agent" "https://web-api-cache.aptoide.com/search?query=$1" 2>/dev/null
		export returncode=$?
		if ! [ "$returncode" = "0" ]; then
			echo -e "\nSorry, something went wrong when searching for the app...\n"
			exit 0
		fi

		### Check that we got the correct app information
		package_id=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"package":"\([^"]*\)".*/\1/p')
		if [[ "$package_id" != "$1" ]]; then
			echo "App with id \"$1\" not found."
			exit 0
		fi
	else
		### We got an URL as parameter
		### Always use https
		link=$(echo $1 | sed 's/http:\/\//https:\/\//g')

		### Test if we have a valid Aptoide URL ###
		test_url_regex=$(echo $link | sed -n 's/^\(https:\/\/.*\.aptoide\.com\/app\).*$/\1/p')
		if [[ "$test_url_regex" = "" ]]; then
			echo "This is not a valid Aptoide app URL."
			exit 0
		fi

		### download the html of the input url ###
		curl -k -o $aptoide_home_dir/.temp -H "User-Agent: $agent" $link 2>/dev/null

		export returncode=$?
		if ! [ "$returncode" = "0" ]; then
			echo -e "\nSorry, something went wrong...\n"
			exit 0
		fi
	fi

	### Get the apk download URL
	apk_link=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"path":"\(https[^"]*\.apk\)".*/\1/p')
	apk_link=$(echo $apk_link | sed 's/\\\//\//g')

	if [[ "$apk_link" = "" ]]; then
		echo "Could not find apk download link."
		exit 0
	fi

	### Check the trust level of the app ###
	trust_level=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"malwareRank":"\([^"]*\)".*/\1/p')
	if [[ "$trust_level" = "" ]]; then
		trust_level=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"rank":"\([^"]*\)".*/\1/p')
	fi
	case $trust_level in
		"TRUSTED" ) echo "The APK is \"trusted\"".
		;;
		"UNKNOWN" ) echo "Be careful! Trust level of the APK is \"unknown\""!
		;;
		"WARN" | "WARNING" | "CRITICAL" )
			echo -e "\nWARNING: Trust level of the APK is \"$trust_level\" - the app is NOT trusted!"
			echo "If you are shure you still want to download, enter \"yes\""
			read download_answer
			if ! [ "$download_answer" == "yes" ]; then
				echo "Download cancelled"
				exit 0;
			fi
		;;
		*) echo "Trust level can't be detected."
		;;
	esac

	### Get the package name and the version number ###
	apk_package_name=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"package":"\([^"]*\)".*/\1/p')
	version_number=$(cat $aptoide_home_dir/.temp | sed -n 's/.*"vername":"\([^"]*\)".*/\1/p')

	##############################################
	### Save the APK in the download directory ###
	echo "Downloading APK file..."
	curl -C - -H "User-Agent: $agent" -o "$aptoide_home_dir/$apk_package_name $version_number.apk" $apk_link

	export returncode=$?
	if [ "$returncode" = "0" ]; then
		echo -e "\nFile saved as \"$apk_package_name $version_number.apk\" in \"$aptoide_home_dir\"\n"
	else
		echo -e "\nSorry, something went wrong...\n"
	fi
}

main $@;
